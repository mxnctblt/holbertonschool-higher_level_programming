The ``0-add_integer`` module
======================
Using ``add_integer``
-------------------

First import ``add_integer`` from the ``0-add_integer`` module:

   >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

>>> add_integer(8, 45)
53

>>> add_integer(-4, 6)
2

>>> add_integer(4)
102

>>> add_integer(35.7, 65.3)
100

>>> add_integer(5, "hello")
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer("hello", 5)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer


>>> add_integer([1, 2, 3], 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, [1, 2, 3])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer([], 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, [])
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer((1,), 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, (1,))
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer({}, 1)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(1, {})
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(float("inf"))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
